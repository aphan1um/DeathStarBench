global: 
  hpa:
    enabled: false
    minReplicas: 2
    maxReplicas: 30
    targetMemoryUtilizationPercentage: '70'
    targetCPUUtilizationPercentage: '70'
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 300m
      memory: 300Mi
  replicas: 3
  imagePullPolicy: "IfNotPresent"
  restartPolicy: Always
  serviceType: ClusterIP
  dockerRegistry: docker.io
  defaultImageVersion: latest
  redis:
    cluster:
      enabled: false
    standalone:
      enabled: false
    replication:
      primary: redis-master
      replica: redis-replicas
      enabled: true
  memcached:
    cluster:
      enabled: false
      port: &memcached-cluster-port 5000
    standalone:
      enabled: true
  mongodb:
    standalone:
      enabled: true
    sharding:
      enabled: false
      svc:
        name: "mongodb-sharded"
        user: "root"
        password: &mongodb-sharded-password "password"
        port: 27017
  nginx:
    resolverName: kube-dns.kube-system.svc.cluster.local
  jaeger:
    localAgentHostPort: jaeger:6831
    queueSize: 1000000
    bufferFlushInterval: 10
    samplerType: probabilistic
    samplerParam: 0.1
    disabled: false
    logSpans: false

mongodb-sharded:
  fullnameOverride: mongodb-sharded
  auth:
    rootPassword: *mongodb-sharded-password
  shards: 4
  shardsvr:
    dataNode:
      replicaCount: 3

mcrouter:
  controller: statefulset
  memcached:
    replicaCount: 3
  mcrouterCommandParams.port: *memcached-cluster-port

redis-cluster:
  usePassword: false
  redis:
    # default readiness / liveness probes are causing issues, rising timeouts/delays might help
    # cluster health check will be handled by post-commit hook
    readinessProbe:
      enabled: false
    livenessProbe:
      enabled: false

redis:
  fullnameOverride: "redis"
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
  replica:
    persistence:
      enabled: false
    replicaCount: 3
